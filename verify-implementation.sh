#!/bin/bash

# Script de verificaci√≥n de la implementaci√≥n de autenticaci√≥n ProcessMaker 3.4
# OsplyfC Dashboard - Verificaci√≥n Final

echo "üîç VERIFICACI√ìN DE IMPLEMENTACI√ìN - OSPLYFC DASHBOARD"
echo "===================================================="
echo

# Verificar estructura de archivos
echo "üìÅ Verificando estructura de archivos..."

files_to_check=(
    "src/environments/environment.ts"
    "src/environments/environment.prod.ts" 
    "src/app/core/services/auth.service.ts"
    "src/app/core/services/processmaker.service.ts"
    "src/app/core/services/dashboard.service.ts"
    "src/app/core/interceptors/auth.interceptor.ts"
    "src/app/core/guards/auth.guard.ts"
    "src/app/features/auth/login.component.ts"
    "src/app/features/dashboard/dashboard.component.ts"
    "src/app/app.config.ts"
    "src/styles.css"
    "README.md"
    "TESTING_GUIDE.md"
)

missing_files=()
for file in "${files_to_check[@]}"; do
    if [ -f "$file" ]; then
        echo "‚úÖ $file"
    else
        echo "‚ùå $file - FALTANTE"
        missing_files+=("$file")
    fi
done

echo

# Verificar configuraci√≥n en environments
echo "‚öôÔ∏è Verificando configuraci√≥n de environment..."

if grep -q "processMakerUrl.*bpm.micam.com.ar/sysOsplyfC" src/environments/environment.ts; then
    echo "‚úÖ URL de ProcessMaker configurada"
else
    echo "‚ùå URL de ProcessMaker no configurada correctamente"
fi

if grep -q "workspace.*OsplyfC" src/environments/environment.ts; then
    echo "‚úÖ Workspace OsplyfC configurado"
else
    echo "‚ùå Workspace no configurado"
fi

if grep -q "/login" src/environments/environment.ts && ! grep -q "/light" src/environments/environment.ts; then
    echo "‚úÖ Endpoints de autenticaci√≥n correctos (NO usa /light)"
else
    echo "‚ùå Endpoints de autenticaci√≥n incorrectos"
fi

echo

# Verificar AuthService
echo "üîê Verificando AuthService..."

if grep -q "login.*LoginCredentials.*Observable<User>" src/app/core/services/auth.service.ts; then
    echo "‚úÖ M√©todo login implementado correctamente"
else
    echo "‚ùå M√©todo login no implementado"
fi

if grep -q "withCredentials: true" src/app/core/services/auth.service.ts; then
    echo "‚úÖ withCredentials configurado para sesiones"
else
    echo "‚ùå withCredentials no configurado"
fi

if grep -q "localStorage.*access_token" src/app/core/services/auth.service.ts; then
    echo "‚úÖ Persistencia de token implementada"
else
    echo "‚ùå Persistencia de token no implementada"
fi

echo

# Verificar que no se use OAuth 2.0
echo "üö´ Verificando que NO se use OAuth 2.0..."

if ! grep -r "oauth" src/ --exclude-dir=node_modules --exclude-dir=dist 2>/dev/null | grep -i "client_id\|client_secret\|authorization_code"; then
    echo "‚úÖ No se detecta configuraci√≥n OAuth 2.0"
else
    echo "‚ùå Se detecta configuraci√≥n OAuth 2.0 - REMOVER"
fi

if ! grep -r "/light" src/ --exclude-dir=node_modules --exclude-dir=dist 2>/dev/null; then
    echo "‚úÖ No se usa endpoint /light"
else
    echo "‚ùå Se detecta uso de endpoint /light - CORREGIR"
fi

echo

# Verificar LoginComponent
echo "üîë Verificando LoginComponent..."

if grep -q "onSubmit.*authService.login" src/app/features/auth/login.component.ts; then
    echo "‚úÖ Formulario de login implementado"
else
    echo "‚ùå Formulario de login no implementado"
fi

if grep -q "MatSnackBar" src/app/features/auth/login.component.ts; then
    echo "‚úÖ Manejo de mensajes implementado"
else
    echo "‚ùå Manejo de mensajes no implementado"
fi

echo

# Verificar AuthInterceptor
echo "üîß Verificando AuthInterceptor..."

if grep -q "HTTP_INTERCEPTORS" src/app/app.config.ts; then
    echo "‚úÖ AuthInterceptor registrado en app.config"
else
    echo "‚ùå AuthInterceptor no registrado"
fi

if grep -q "Authorization.*Bearer" src/app/core/interceptors/auth.interceptor.ts; then
    echo "‚úÖ Headers de autorizaci√≥n implementados"
else
    echo "‚ùå Headers de autorizaci√≥n no implementados"
fi

echo

# Verificar ProcessMakerService
echo "‚öôÔ∏è Verificando ProcessMakerService..."

if grep -q "getTodoCases\|getSentCases\|getCaseStats" src/app/core/services/processmaker.service.ts; then
    echo "‚úÖ M√©todos de casos implementados"
else
    echo "‚ùå M√©todos de casos no implementados"
fi

if grep -q "buildApiUrl.*workspace" src/app/core/services/processmaker.service.ts; then
    echo "‚úÖ Construcci√≥n de URLs con workspace"
else
    echo "‚ùå Construcci√≥n de URLs no implementada"
fi

echo

# Verificar DashboardComponent
echo "üìä Verificando DashboardComponent..."

if grep -q "expedientes.*ExpedienteType" src/app/features/dashboard/dashboard.component.ts; then
    echo "‚úÖ Grid de expedientes implementado"
else
    echo "‚ùå Grid de expedientes no implementado"
fi

if grep -q "stats.*DashboardStats" src/app/features/dashboard/dashboard.component.ts; then
    echo "‚úÖ Estad√≠sticas implementadas"
else
    echo "‚ùå Estad√≠sticas no implementadas"
fi

echo

# Verificar dependencias
echo "üì¶ Verificando dependencias..."

if [ -f "package.json" ]; then
    if grep -q "@angular/material" package.json; then
        echo "‚úÖ Angular Material instalado"
    else
        echo "‚ùå Angular Material no instalado"
    fi
    
    if grep -q "@angular/cdk" package.json; then
        echo "‚úÖ Angular CDK instalado"
    else
        echo "‚ùå Angular CDK no instalado"
    fi
else
    echo "‚ùå package.json no encontrado"
fi

echo

# Resumen final
echo "üìã RESUMEN DE VERIFICACI√ìN"
echo "========================="

if [ ${#missing_files[@]} -eq 0 ]; then
    echo "‚úÖ Todos los archivos necesarios est√°n presentes"
else
    echo "‚ùå Archivos faltantes: ${#missing_files[@]}"
    for file in "${missing_files[@]}"; do
        echo "   - $file"
    done
fi

echo
echo "üöÄ PR√ìXIMOS PASOS:"
echo "1. Ejecutar 'npm install' para instalar dependencias"
echo "2. Configurar credenciales de test en environment"
echo "3. Ejecutar 'ng serve' para iniciar servidor de desarrollo"
echo "4. Probar login con credenciales v√°lidas de ProcessMaker"
echo "5. Verificar logs en DevTools Console"
echo "6. Seguir gu√≠a de testing en TESTING_GUIDE.md"

echo
echo "üìñ DOCUMENTACI√ìN:"
echo "- README.md: Gu√≠a completa de instalaci√≥n y uso"
echo "- TESTING_GUIDE.md: Gu√≠a de pruebas paso a paso"
echo "- /docs/: Documentaci√≥n del contexto del proyecto"

echo
echo "‚ö†Ô∏è RECORDATORIOS:"
echo "- NO usar endpoint /light (no disponible en PM 3.4)"
echo "- Usar autenticaci√≥n session-based, NO OAuth 2.0"
echo "- Configurar withCredentials: true para cookies de sesi√≥n"
echo "- Verificar que el workspace 'OsplyfC' est√© disponible"

echo
echo "üéØ VERIFICACI√ìN COMPLETADA"
echo "========================="